1.Create rails project:
=>rails new stickers.win --database=postgresql

2.Creat a controller and also a index.html.erb file in views>store. 
=>rails g controller Store index

in routes.rb file:
  root to: 'store#index'


Added this code in index.html.erb:

<div class="container">
	<h1>stickers.win</h1>

	<div class="product">
		<h2>Pack of 5 stickers for $5</h2>
		<h3>Free Shipping anywhere in the world!</h3>
		<div class="sticker">
			<%= image_tag("reactallthethings.png", alt: "REACT ALL THE THINGS") %>
		</div>
		
	</div>
</div>



Added this code in stylesheets>store.scss:

body {
	font-family: sans-serif;
	color: #333
}

.container {
	max-width: 600px;
	margin: auto;
}

.sticker {
	border: solid 1px #333;
	width: 355px;
	padding: 5px;
	img {
		border: solid 1px #ccc;
	}
}






3.
Now go to this site and added this javascript feature  For added Stripe Checkout:
https://stripe.com/docs/checkout/rails

Added this in gemfile:
gem 'stripe'

Now run this in terminal:
=>bundle

Create a controller:
=>rails g controller charges

Added this code in charges_controller.rb:

def create
	  # Amount in cents
	  @amount = 500

	  customer = Stripe::Customer.create(
	    :email => params[:stripeEmail],
	    :source  => params[:stripeToken]
	  )

	  charge = Stripe::Charge.create(
	    :customer    => customer.id,
	    :amount      => @amount,
	    :description => 'pack of 5 stickers',
	    :currency    => 'usd'
	  )
	rescue Stripe::CardError => e
	  flash[:error] = e.message
	  redirect_to :root
	end




Added this code in store>index.html.erb:

<%= form_tag charges_path do %>
		  <article>
		    <% if flash[:error].present? %>
		      <div id="error_explanation">
		        <p><%= flash[:error] %></p>
		      </div>
		    <% end %>
		  </article>

		  <script src="https://checkout.stripe.com/checkout.js" class="stripe-button"
		          data-key="<%= Rails.configuration.stripe[:publishable_key] %>"
		          data-description="Pack of 5 stickers"
		          data-amount="500"
		          data-locale="auto"></script>
		<% end %>





Now,
So users can access the newly created controller, add a route to it in config/routes.rb:

resources :charges



Now, create a stripe.rb file in config/initializers  and added this code:

Rails.configuration.stripe = {
  :publishable_key => ENV['STRIPE_PUBLISHABLE_KEY'],
  :secret_key      => ENV['STRIPE_SECRET_KEY']
}

Stripe.api_key = Rails.configuration.stripe[:secret_key]


Added this in .bash_profile   Home => ctrl+H [Linux mint]:


alias g=git
alias pyser='python -m SimpleHTTPServer 8000'

[[ -s "$HOME/.profile" ]] && source "$HOME/.profile" # Load the default .profile

[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm" # Load RVM into a shell session *as a function*

export NVM_DIR-"$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh"] && \. "$NVM_DIR/nvm.sh"  #This loads nvm

export EDITOR='subl -w -n'
export PATH=$PATH:/Users/hrishi/Library/Android/sdk/platform-tools/

export STRIPE_SECRET_KEY=sk_live_hI2aZRWCQPhEKpsC3OSJvsfP
export STRIPE_PUBLISHABLE_KEY=pk_live_Fcc6uOElWR2FtKEOjV3fGKdg




start 3rd commit:
Now we need to create Heroku App:
Heroku app install in linux mint:
=>curl https://cli-assets.heroku.com/install-standalone.sh | sh
=>heroku --version
=>heroku login

=>heroku create stickerswin
=>git push heroku master
=>heroku open
=>heroku config:set STRIPE_PUBLISHABLE_KEY=    STRIPE_SECRET_KEY=
